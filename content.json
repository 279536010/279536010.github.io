{"meta":{"title":"mylog","subtitle":"","description":"","author":"jm","url":"http://example.com","root":"/"},"pages":[],"posts":[{"title":"test","slug":"test","date":"2020-11-09T07:39:18.000Z","updated":"2020-11-10T03:39:04.862Z","comments":true,"path":"2020/11/09/test/","link":"","permalink":"http://example.com/2020/11/09/test/","excerpt":"","text":"***辉","categories":[],"tags":[]},{"title":"name","slug":"name","date":"2020-11-09T05:42:46.000Z","updated":"2020-11-09T05:42:46.245Z","comments":true,"path":"2020/11/09/name/","link":"","permalink":"http://example.com/2020/11/09/name/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"windows-docker安装SeaTa","slug":"docker-seata","date":"2020-11-06T07:31:20.361Z","updated":"2020-11-06T09:42:03.507Z","comments":true,"path":"2020/11/06/docker-seata/","link":"","permalink":"http://example.com/2020/11/06/docker-seata/","excerpt":"","text":"Windows安装Docker：https://www.runoob.com/docker/windows-docker-install.html(注意Win10还是Win7) 安装Seata可以自己选择安装版本打开cmd输入： 1docker search seata 安装Sea按照name拉去镜像： 1docker pull seataio&#x2F;seata-server 本地创建一个文件夹作配置文件挂载（挂载可以不用敲命令改配置文件，直接改本地配置文件） 创建2个文件名字：registry.conf、file.conf 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889registry &#123; # file 、nacos 、eureka、redis、zk、consul、etcd3、sofa(选择注册中心) type = &quot;eureka&quot; nacos &#123; application = &quot;seata-server&quot; serverAddr = &quot;localhost&quot; namespace = &quot;&quot; cluster = &quot;default&quot; username = &quot;&quot; password = &quot;&quot; &#125; #配置eureka地址。（注意此处如果需要本地eureka不能填127.0.0.1需要本地ip地址。） eureka &#123; serviceUrl = &quot;http://admin:123456@127.0.0.1:8761/eureka&quot; application = &quot;default&quot; weight = &quot;1&quot; &#125; redis &#123; serverAddr = &quot;localhost:6379&quot; db = 0 password = &quot;&quot; cluster = &quot;default&quot; timeout = 0 &#125; zk &#123; cluster = &quot;default&quot; serverAddr = &quot;127.0.0.1:2181&quot; sessionTimeout = 6000 connectTimeout = 2000 username = &quot;&quot; password = &quot;&quot; &#125; consul &#123; cluster = &quot;default&quot; serverAddr = &quot;127.0.0.1:8500&quot; &#125; etcd3 &#123; cluster = &quot;default&quot; serverAddr = &quot;http://localhost:2379&quot; &#125; sofa &#123; serverAddr = &quot;127.0.0.1:9603&quot; application = &quot;default&quot; region = &quot;DEFAULT_ZONE&quot; datacenter = &quot;DefaultDataCenter&quot; cluster = &quot;default&quot; group = &quot;SEATA_GROUP&quot; addressWaitTime = &quot;3000&quot; &#125; file &#123; name = &quot;file.conf&quot; &#125; &#125; config &#123; # file、nacos 、apollo、zk、consul、etcd3 type = &quot;file&quot; nacos &#123; serverAddr = &quot;localhost&quot; namespace = &quot;&quot; group = &quot;SEATA_GROUP&quot; username = &quot;&quot; password = &quot;&quot; &#125; consul &#123; serverAddr = &quot;127.0.0.1:8500&quot; &#125; apollo &#123; appId = &quot;seata-server&quot; apolloMeta = &quot;http://192.168.1.204:8801&quot; namespace = &quot;application&quot; &#125; zk &#123; serverAddr = &quot;127.0.0.1:2181&quot; sessionTimeout = 6000 connectTimeout = 2000 username = &quot;&quot; password = &quot;&quot; &#125; etcd3 &#123; serverAddr = &quot;http://localhost:2379&quot; &#125; file &#123; name = &quot;file.conf&quot; &#125; &#125; 12345678910111213141516171819202122232425262728293031323334353637383940## transaction log store, only used in seata-server store &#123; ## store mode: file、db mode = &quot;db&quot; ## file store property file &#123; ## store location dir dir = &quot;sessionStore&quot; # branch session size , if exceeded first try compress lockkey, still exceeded throws exceptions maxBranchSessionSize = 16384 # globe session size , if exceeded throws exceptions maxGlobalSessionSize = 512 # file buffer size , if exceeded allocate new buffer fileWriteBufferCacheSize = 16384 # when recover batch read size sessionReloadReadSize = 100 # async, sync flushDiskMode = async &#125; ## database store property 配置数据库信息（当前为开发环境数据库）。 db &#123; ## the implement of javax.sql.DataSource, such as DruidDataSource(druid)/BasicDataSource(dbcp) etc. datasource = &quot;druid&quot; ## mysql/oracle/postgresql/h2/oceanbase etc. dbType = &quot;mysql&quot; driverClassName = &quot;com.mysql.jdbc.Driver&quot; url = &quot;jdbc:mysql://192.168.1.147:3306/funeral&quot; user = &quot;root&quot; password = &quot;Ddrb@123&quot; minConn = 5 maxConn = 30 globalTable = &quot;global_table&quot; branchTable = &quot;branch_table&quot; lockTable = &quot;lock_table&quot; queryLimit = 100 maxWait = 5000 &#125; &#125; 启动docker容器。 1docker run -d --name -seata-server -p 8091:8091 -e SEATA_IP&#x3D;192.168.0.223 -e SEATA_CONFIG_NAME&#x3D;file:&#x2F;root&#x2F;seata-config&#x2F;registry -v &#x2F;e&#x2F;docker&#x2F;seata:&#x2F;root&#x2F;seata-config seataio&#x2F;seata-server -e SEATA_IP=192.168.0.223指定seata-server启动的IP, 该IP用于向注册中心注册时使用：改为本地ip地址 -e SEATA_CONFIG_NAME=file:/root/seata-config/registry 指定配置文件位置，将加载/root/seata-config/registry.conf作为配置文件。 指定file.conf文件则在registry.conf文件中confi配置修改。 123456config &#123; type &#x3D; &quot;file&quot; file &#123; name &#x3D; &quot;file:&#x2F;root&#x2F;seata-config&#x2F;file.conf&quot; &#125;&#125; -v /e/docker/seata:/root/seata-config 注：用于挂载宿主机的目录 -v 本地目录:docker容器目录 如果不挂载也可以直接编辑seata内部配置。（相对繁琐） 查询所有运行容器 1docker ps 进入容器 1docker exec -it seata-server bash 编辑文件（没有vim需要安装） 12345vi registry.conf &#x2F;&#x2F;编辑文件&#x2F;&#x2F;顺序别反apt-get update &#x2F;&#x2F;更新软件列表apt-get install -y vim &#x2F;&#x2F;下载vim","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2020-11-06T06:39:56.974Z","updated":"2020-11-06T06:39:56.974Z","comments":true,"path":"2020/11/06/hello-world/","link":"","permalink":"http://example.com/2020/11/06/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}],"categories":[],"tags":[]}